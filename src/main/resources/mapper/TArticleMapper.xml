<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhan.xhanblog.repository.TArticleMapper">
  <resultMap id="BaseResultMap" type="com.xhan.xhanblog.entity.dao.TArticle">
    <id column="a_id" jdbcType="BIGINT" property="aId" />
    <result column="a_title" jdbcType="VARCHAR" property="aTitle" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="hits" jdbcType="INTEGER" property="hits" />
    <result column="comment_nums" jdbcType="INTEGER" property="commentNums" />
    <result column="allow_comment" jdbcType="TINYINT" property="allowComment" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xhan.xhanblog.entity.dao.TArticle">
    <result column="a_content" jdbcType="LONGVARCHAR" property="aContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a_id, a_title, create_time, category, category_id, tags, hits, comment_nums, allow_comment, 
    status
  </sql>
  <sql id="Blob_Column_List">
    a_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xhan.xhanblog.entity.dao.TArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xhan.xhanblog.entity.dao.TArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    where a_id = #{aId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_article
    where a_id = #{aId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhan.xhanblog.entity.dao.TArticleExample">
    delete from t_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhan.xhanblog.entity.dao.TArticle">
    <selectKey keyProperty="aId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article (a_title, create_time, category, 
      category_id, tags, hits, 
      comment_nums, allow_comment, status, 
      a_content)
    values (#{aTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{category,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=BIGINT}, #{tags,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, 
      #{commentNums,jdbcType=INTEGER}, #{allowComment,jdbcType=TINYINT}, #{status,jdbcType=VARCHAR}, 
      #{aContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xhan.xhanblog.entity.dao.TArticle">
    <selectKey keyProperty="aId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aTitle != null">
        a_title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="hits != null">
        hits,
      </if>
      <if test="commentNums != null">
        comment_nums,
      </if>
      <if test="allowComment != null">
        allow_comment,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="aContent != null">
        a_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aTitle != null">
        #{aTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="commentNums != null">
        #{commentNums,jdbcType=INTEGER},
      </if>
      <if test="allowComment != null">
        #{allowComment,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="aContent != null">
        #{aContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhan.xhanblog.entity.dao.TArticleExample" resultType="java.lang.Long">
    select count(*) from t_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectByTagId" parameterType="java.lang.Long">
    SELECT a.* FROM
    t_article AS a INNER JOIN t_relation AS t
    ON a.a_id = t.a_id
    WHERE t.m_id = #{tagId}
  </select>

  <update id="updateCategoryId" parameterType="Long">
    UPDATE t_article
    SET category_id = #{cateId}
    WHERE a_id = #{aId}
  </update>

  <update id="updateCategoryContent" >
    UPDATE `t_article`
    SET category = #{cate}
    WHERE category_id = #{cateId}
  </update>

  <update id="setCateToNull" parameterType="Long">
    UPDATE t_article
    SET category_id = NULL, category=NULL
    WHERE category_id = #{deleteId}
  </update>

  <update id="updateByExampleSelective" parameterType="map">
    update t_article
    <set>
      <if test="record.aId != null">
        a_id = #{record.aId,jdbcType=BIGINT},
      </if>
      <if test="record.aTitle != null">
        a_title = #{record.aTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.hits != null">
        hits = #{record.hits,jdbcType=INTEGER},
      </if>
      <if test="record.commentNums != null">
        comment_nums = #{record.commentNums,jdbcType=INTEGER},
      </if>
      <if test="record.allowComment != null">
        allow_comment = #{record.allowComment,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.aContent != null">
        a_content = #{record.aContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_article
    set a_id = #{record.aId,jdbcType=BIGINT},
      a_title = #{record.aTitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      tags = #{record.tags,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      comment_nums = #{record.commentNums,jdbcType=INTEGER},
      allow_comment = #{record.allowComment,jdbcType=TINYINT},
      status = #{record.status,jdbcType=VARCHAR},
      a_content = #{record.aContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_article
    set a_id = #{record.aId,jdbcType=BIGINT},
      a_title = #{record.aTitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      tags = #{record.tags,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      comment_nums = #{record.commentNums,jdbcType=INTEGER},
      allow_comment = #{record.allowComment,jdbcType=TINYINT},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhan.xhanblog.entity.dao.TArticle">
    update t_article
    <set>
      <if test="aTitle != null">
        a_title = #{aTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="commentNums != null">
        comment_nums = #{commentNums,jdbcType=INTEGER},
      </if>
      <if test="allowComment != null">
        allow_comment = #{allowComment,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="aContent != null">
        a_content = #{aContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where a_id = #{aId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xhan.xhanblog.entity.dao.TArticle">
    update t_article
    set a_title = #{aTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT},
      tags = #{tags,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      comment_nums = #{commentNums,jdbcType=INTEGER},
      allow_comment = #{allowComment,jdbcType=TINYINT},
      status = #{status,jdbcType=VARCHAR},
      a_content = #{aContent,jdbcType=LONGVARCHAR}
    where a_id = #{aId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhan.xhanblog.entity.dao.TArticle">
    update t_article
    set a_title = #{aTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT},
      tags = #{tags,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      comment_nums = #{commentNums,jdbcType=INTEGER},
      allow_comment = #{allowComment,jdbcType=TINYINT},
      status = #{status,jdbcType=VARCHAR}
    where a_id = #{aId,jdbcType=BIGINT}
  </update>
</mapper>